  #include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX 100
int prec(char c)
{
    if(c=='^')
        return 3;
    else if(c=='/'||c=='*')
        return 2;
     else if(c=='+'||c=='-') 
        return 1;
   else 
    return -1;
}
char associativity(char c) {
    if (c == '^')
        return 'R';
    return 'L'; 
void infixToPostfix(char s[])
{
    char result[MAX];
    int ri=0;
    int l=strlen(s);
    char stk[MAX];
    int si=-1;
    for(int i=0;i<l;i++)
    {
        char c=s[i];
        if((c>='a'&&c<='z')||(c>='A'&&c<='Z')||c>=0&&c<=9)
            result [ri++]==c;
        else if(c=='(')
            stk[++si]==c;
        else if(c==')')
        {
            while(si>=0 &&stk[si]!='(')
            {
                result[ri++]=stk[si--];
            }
        }
           else 
        {
            while(si>=0 && (prec(s[i])<prec(stk[si])||prec(s[i])==prec(stk[si])&&
                                           associativity(s[i]) == 'L'))
            {
                result[ri++]=stk[si--];
            }
            stk[++si]=c;
        }
    }
    while(si>=0)
        result[ri++]=stk[si--];
    result[ri]='\0';
    printf("%s\n",result);
}
 
 
int main(){
    char exp[MAX];
    printf("\nEnter the infix expression: ");
    scanf("%s",exp);\
    infixToPostfix(exp);
    return 0;
}
